print(MAUI_target_hist)
View(target_scores)
target_scores_summary <- target_scores %>%
group_by(TypeItem, sample_size) %>%
summarise(sum_MAUI_mean = mean(sum_MAUI),
sum_MAUI_var = var(sum_MAUI),
avg_MAUI_mean = mean(avg_MAUI),
avg_MAUI_var = var(avg_MAUI),
sum_UI95_mean = mean(sum_UI95),
sum_UI95_var = var(sum_UI95),
avg_UI95_mean = mean(avg_UI95),
avg_UI95_var = var(avg_UI95))
View(target_scores_summary)
library(foreach)
library(tidyverse)
library(readxl)
#source('code/model fitting functions.R')
#####
# Set up/load files
item_score_frequencies <- read_csv('data/dissertation score frequencies.csv')
participant_scores <- read_csv('data/dissertation participant scores.csv')
participant_ids <- read_csv('data/bootstrapped participant ids.csv')
target_ids <- filter(participant_ids, sample_size == 100)
target_scores <- filter(participant_scores, partID %in% target_ids$partID)
items <- unique(item_score_frequencies$TypeItem) #item names from frame
samples <- unique(item_score_frequencies$sample_size) #sample sizes from frame
#####
# makes calcs for and graphs density plots
item_densities <- foreach(i=items, .combine='rbind') %:%
foreach(j=samples, .combine='rbind') %do% {
hold <- item_score_frequencies %>%
filter(TypeItem == i & sample_size == j)
max_rank <- nrow(hold)
densities <- hold %>%
mutate(rank = rank(-count)) %>%
mutate(UI95 = case_when(pct_giving <= .05 ~ 1,
TRUE ~ 0)) %>%
mutate(norm_rank = (rank-0.5)/max_rank)
}
View(item_densities)
#####
# makes calcs for and graphs density plots
item_densities <- foreach(i=items, .combine='rbind') %:%
foreach(j=samples, .combine='rbind') %do% {
hold <- item_score_frequencies %>%
filter(TypeItem == i & sample_size == j)
max_rank <- nrow(hold)
densities <- hold %>%
mutate(rank = rank(-count)) %>%
mutate(UI95 = case_when(pct_giving <= .05 ~ 1,
TRUE ~ 0)) %>%
mutate(norm_rank = (rank-0.5)/max_rank,
norm_mass = cumsum - (mass/2))
}
#####
# makes calcs for and graphs density plots
item_densities <- foreach(i=items, .combine='rbind') %:%
foreach(j=samples, .combine='rbind') %do% {
hold <- item_score_frequencies %>%
filter(TypeItem == i & sample_size == j)
max_rank <- nrow(hold)
ans <- max(cumsum)
densities <- hold %>%
mutate(rank = rank(-count)) %>%
mutate(UI95 = case_when(pct_giving <= .05 ~ 1,
TRUE ~ 0)) %>%
mutate(norm_rank = (rank-0.5)/max_rank,
norm_mass = cumsum/ans)
}
#####
# makes calcs for and graphs density plots
item_densities <- foreach(i=items, .combine='rbind') %:%
foreach(j=samples, .combine='rbind') %do% {
hold <- item_score_frequencies %>%
filter(TypeItem == i & sample_size == j)
max_rank <- nrow(hold)
ans <- max(cumsum)
densities <- hold %>%
mutate(rank = rank(-count)) %>%
mutate(UI95 = case_when(pct_giving <= .05 ~ 1,
TRUE ~ 0)) %>%
mutate(norm_rank = (rank-0.5)/max_rank,
norm_mass = cumsum/ans)
}
#####
# makes calcs for and graphs density plots
item_densities <- foreach(i=items, .combine='rbind') %:%
foreach(j=samples, .combine='rbind') %do% {
hold <- item_score_frequencies %>%
filter(TypeItem == i & sample_size == j)
max_rank <- nrow(hold)
#ans <- max(cumsum)
densities <- hold %>%
mutate(rank = rank(-count)) %>%
mutate(UI95 = case_when(pct_giving <= .05 ~ 1,
TRUE ~ 0)) %>%
mutate(norm_rank = (rank-0.5)/max_rank,
norm_mass = cumsum/max(cumsum))
}
UI95_item_density_plot <- ggplot(data = item_densities) +
geom_line(mapping = aes(x=norm_mass, y=UI95)) +
facet_grid(sample_size ~ TypeItem)
print(UI95_item_density_plot)
MAUI_step_plot <- ggplot(data = item_densities) +
geom_step(mapping = aes(x=norm_mass, y=MAUI), direction='vh') +
facet_grid(sample_size ~ TypeItem)
print(MAUI_step_plot)
UI95_step_plot <- ggplot(data = item_densities) +
geom_step(mapping = aes(x=norm_mass, y=UI95), direction='vh') +
facet_grid(sample_size ~ TypeItem)
print(UI95_step_plot)
UI95_step_plot <- ggplot(data = item_densities) +
geom_step(mapping = aes(x=norm_mass, y=UI95)) +
facet_grid(sample_size ~ TypeItem)
print(UI95_step_plot)
MAUI_item_hist <- qplot(MAUI, data=item_densities, weight=mass, geom="histogram") +
facet_grid(sample_size ~ TypeItem)
print(MAUI_item_hist)
library(openxlsx)
library(doParallel)
library(foreach)
library(tidyverse)
library(readxl)
set.seed(1729) #' 91 works too, but is less interesting.
source('code/bootstrapping subsample functions.R')
all_responses <- read_csv('data/dissertation tall.csv')
View(all_responses)
all_responses <- read_csv('data/dissertation tall.csv')
all_responses <- read_csv('data/dissertation tall.csv')
all_responses$Std <- str_replace_all(all_responses$Std, "[^[:alnum:]]", " ") %>% #gets rid of non alphanumerics
tolower() #' turns everything to lowercase
View(all_responses)
sort_count1 <- function(resp) {
resp %>%
group_by(Std) %>% #Std is file-specific
summarise(count = n()) %>%
ungroup()
}
boot_response_scores <- sort_count1(all_responses)
View(boot_response_scores)
ranks1 <- function(resp, size) {
resp %>%
arrange(desc(count)) %>%
mutate(cum = cumsum(count)) %>%
group_by(count) %>%
summarise(cumsum = max(cum),
mass = n()) %>%
mutate(mass = mass*count,
MAUI = ((cumsum - mass) + (mass/2))/max(cumsum),
pct_giving = count/size) %>%
arrange(desc(count)) %>%
ungroup()
}
unq <- unique(all_responses$respID)
boot_ranks <- ranks1(boot_response_scores, 884)
View(boot_ranks)
append_scores1 <- function(resp, rnks) {
ranks <- rnks %>%
select(-cumsum, -mass)
appended <- resp %>%
left_join(ranks)
}
boot_response_scores <- append_scores1(boot_response_scores, boot_ranks)
new_tall <- left_join(all_responses, boot_response_scores, by='Std')
View(new_tall)
new_tall <- new_tall %>% select(-UI, -MAUI.x)
names(new_tall$MAUI.y) <- 'MAUI'
new_tall <- new_tall %>% mutate(UI95 = case_when(pct_giving<=.05 ~ 1, TRUE ~ 0))
write_csv(new_tall, 'data/dissertation tall w scores.csv')
library(foreach)
library(tidyverse)
library(readxl)
#source('code/model fitting functions.R')
#####
# Set up/load files
item_score_frequencies <- read_csv('data/dissertation score frequencies.csv')
participant_scores <- read_csv('data/dissertation participant scores.csv')
participant_ids <- read_csv('data/bootstrapped participant ids.csv')
target_ids <- filter(participant_ids, sample_size == 100)
target_scores <- filter(participant_scores, partID %in% target_ids$partID)
items <- unique(item_score_frequencies$TypeItem) #item names from frame
samples <- unique(item_score_frequencies$sample_size) #sample sizes from frame
#####
# makes calcs for and graphs density plots
item_densities <- foreach(i=items, .combine='rbind') %:%
foreach(j=samples, .combine='rbind') %do% {
hold <- item_score_frequencies %>%
filter(TypeItem == i & sample_size == j)
max_rank <- nrow(hold)
#ans <- max(cumsum)
densities <- hold %>%
mutate(rank = rank(-count)) %>%
mutate(UI95 = case_when(pct_giving <= .05 ~ 1,
TRUE ~ 0)) %>%
mutate(norm_rank = (rank-0.5)/max_rank,
norm_mass = cumsum/max(cumsum))
}
MAUI_item_density_plot <- ggplot(data = item_densities) +
geom_line(mapping = aes(x=norm_rank, y=MAUI)) +
facet_grid(sample_size ~ TypeItem)
UI95_item_density_plot <- ggplot(data = item_densities) +
geom_line(mapping = aes(x=norm_mass, y=UI95)) +
facet_grid(sample_size ~ TypeItem)
MAUI_step_plot <- ggplot(data = item_densities) +
geom_step(mapping = aes(x=norm_mass, y=MAUI), direction='vh') +
facet_grid(sample_size ~ TypeItem)
UI95_step_plot <- ggplot(data = item_densities) +
geom_step(mapping = aes(x=norm_mass, y=UI95)) +
facet_grid(sample_size ~ TypeItem)
MAUI_item_hist <- qplot(MAUI, data=item_densities, weight=mass, geom="histogram") +
facet_grid(sample_size ~ TypeItem)
library(foreach)
library(tidyverse)
library(readxl)
#source('code/model fitting functions.R')
#####
# Set up/load files
item_score_frequencies <- read_csv('data/dissertation score frequencies.csv')
participant_scores <- read_csv('data/dissertation participant scores.csv')
participant_ids <- read_csv('data/bootstrapped participant ids.csv')
target_ids <- filter(participant_ids, sample_size == 100)
target_scores <- filter(participant_scores, partID %in% target_ids$partID)
items <- unique(item_score_frequencies$TypeItem) #item names from frame
samples <- unique(item_score_frequencies$sample_size) #sample sizes from frame
#####
# makes calcs for and graphs density plots
item_densities <- foreach(i=items, .combine='rbind') %:%
foreach(j=samples, .combine='rbind') %do% {
hold <- item_score_frequencies %>%
filter(TypeItem == i & sample_size == j)
max_rank <- nrow(hold)
#ans <- max(cumsum)
densities <- hold %>%
mutate(rank = rank(-count)) %>%
mutate(UI95 = case_when(pct_giving <= .05 ~ 1,
TRUE ~ 0)) %>%
mutate(norm_rank = (rank-0.5)/max_rank,
norm_mass = cumsum/max(cumsum))
}
MAUI_item_density_plot <- ggplot(data = item_densities) +
geom_line(mapping = aes(x=norm_rank, y=MAUI)) +
facet_grid(sample_size ~ TypeItem)
UI95_item_density_plot <- ggplot(data = item_densities) +
geom_line(mapping = aes(x=norm_mass, y=UI95)) +
facet_grid(sample_size ~ TypeItem)
MAUI_step_plot <- ggplot(data = item_densities) +
geom_step(mapping = aes(x=norm_mass, y=MAUI), direction='vh') +
facet_grid(sample_size ~ TypeItem)
UI95_step_plot <- ggplot(data = item_densities) +
geom_step(mapping = aes(x=norm_mass, y=UI95)) +
facet_grid(sample_size ~ TypeItem)
MAUI_item_hist <- qplot(MAUI, data=item_densities, weight=mass, geom="histogram") +
facet_grid(sample_size ~ TypeItem)
MAUI_item_density_plot
library(foreach)
library(tidyverse)
library(readxl)
dd <- data.frame(
predicted = rnorm(72, mean = 2, sd = 2),
state = rep(c("A", "B", "C"), each = 24)
)
View(dd)
grid <- with(dd, seq(min(predicted), max(predicted), length = 100))
normaldens <- plyr::ddply(dd, "state", function(df) {
data.frame(
predicted = grid,
density = dnorm(grid, mean(df$predicted), sd(df$predicted))
)
})
plot <- ggplot(dd, aes(predicted))  +
geom_density() +
geom_line(aes(y = density), data = normaldens, colour = "red") +
facet_wrap(~ state)
plot(plot)
View(normaldens)
dens <- dd %>% group_by(state) %>% do(data.frame(predicted = grid,  density = dnorm(grid, mean(df$predicted), sd(df$predicted))))
dens <- dd %>% group_by(state) %>% do(.data.frame(predicted = grid,  density = dnorm(grid, mean(df$predicted), sd(df$predicted))))
dens <- dd %>% group_by(state) %>% do(data.frame(predicted = grid,  density = dnorm(grid, mean(.$predicted), sd(.$predicted))))
View(dens)
library(foreach)
library(tidyverse)
library(readxl)
#source('code/model fitting functions.R')
#####
# Set up/load files
item_score_frequencies <- read_csv('data/dissertation score frequencies.csv')
participant_scores <- read_csv('data/dissertation participant scores.csv')
participant_ids <- read_csv('data/bootstrapped participant ids.csv')
target_ids <- filter(participant_ids, sample_size == 100)
target_scores <- filter(participant_scores, partID %in% target_ids$partID)
items <- unique(item_score_frequencies$TypeItem) #item names from frame
samples <- unique(item_score_frequencies$sample_size) #sample sizes from frame
#####
# makes calcs for and graphs density plots
item_densities <- foreach(i=items, .combine='rbind') %:%
foreach(j=samples, .combine='rbind') %do% {
hold <- item_score_frequencies %>%
filter(TypeItem == i & sample_size == j)
max_rank <- nrow(hold)
#ans <- max(cumsum)
densities <- hold %>%
mutate(rank = rank(-count)) %>%
mutate(UI95 = case_when(pct_giving <= .05 ~ 1,
TRUE ~ 0)) %>%
mutate(norm_rank = (rank-0.5)/max_rank,
norm_mass = cumsum/max(cumsum))
}
MAUI_item_density_plot <- ggplot(data = item_densities) +
geom_line(mapping = aes(x=norm_rank, y=MAUI)) +
facet_grid(sample_size ~ TypeItem)
UI95_item_density_plot <- ggplot(data = item_densities) +
geom_line(mapping = aes(x=norm_mass, y=UI95)) +
facet_grid(sample_size ~ TypeItem)
MAUI_step_plot <- ggplot(data = item_densities) +
geom_step(mapping = aes(x=norm_mass, y=MAUI), direction='vh') +
facet_grid(sample_size ~ TypeItem)
UI95_step_plot <- ggplot(data = item_densities) +
geom_step(mapping = aes(x=norm_mass, y=UI95)) +
facet_grid(sample_size ~ TypeItem)
MAUI_item_hist <- qplot(MAUI, data=item_densities, weight=mass, geom="histogram") +
facet_grid(sample_size ~ TypeItem)
View(item_densities)
MAUI_grid <- with(participant_scores, seq(min(sum_MAUI), max(sum_MAUI), length = 100))
View(MAUI_grid)
MAUI_grid <- with(participant_scores, seq(min(sum_MAUI), max(sum_MAUI), length = 100))
MAUI_normdens <- dd %>%
group_by(TypeItem) %>%
do(data.frame(predicted = MAUI_grid,  density = dnorm(MAUI_grid, mean(.$sum_MAUI), sd(.$sum_MAUI))))
View(participant_scores)
MAUI_normdens <- participant_scores %>%
select(one_of(c(sum_MAUI, TypeItem, sample_size))) %>%
group_by(TypeItem, sample_size) %>%
do(data.frame(predicted = MAUI_grid,  density = dnorm(MAUI_grid, mean(.$sum_MAUI), sd(.$sum_MAUI))))
MAUI_normdens <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by(TypeItem, sample_size) %>%
do(data.frame(predicted = MAUI_grid,  density = dnorm(MAUI_grid, mean(.$sum_MAUI), sd(.$sum_MAUI))))
View(MAUI_normdens)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
geom_histogram(binwidth=2) +
geom_line(aes(y=density), data=MAUI_normaldens, colour='red') +
facet_grid(sample_size ~ TypeItem)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
geom_histogram(binwidth=2) +
geom_line(aes(y=density), data=MAUI_normdens, colour='red') +
facet_grid(sample_size ~ TypeItem)
plot(MAUI_participant_hist)
View(participant_scores)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI))
View(participant_scores)
plot(MAUI_participant_hist)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
geom_histogram(binwidth=2)
plot(MAUI_participant_hist)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
geom_histogram(binwidth=2) +
geom_line(aes(y=density), data=MAUI_normdens, colour='red')
plot(MAUI_participant_hist)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
#geom_histogram(binwidth=2) +
geom_density() +
geom_line(aes(y=density), data=MAUI_normdens, colour='red') +
facet_grid(sample_size ~ TypeItem)
plot(MAUI_participant_hist)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
#geom_histogram(binwidth=2) +
geom_density() +
geom_line(data=MAUI_normdens, aes(y=density), colour='red')
plot(MAUI_participant_hist)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
#geom_histogram(binwidth=2) +
geom_density()
plot(MAUI_participant_hist)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
#geom_histogram(binwidth=2) +
#geom_density() +
geom_line(data=MAUI_normdens, aes(y=density), colour='red') +
facet_grid(sample_size ~ TypeItem)
plot(MAUI_participant_hist)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
#geom_histogram(binwidth=2) +
#geom_density() +
geom_line(data=MAUI_normdens, aes(y=density), colour='red') +
facet_grid(sample_size ~ TypeItem)
plot(MAUI_participant_hist)
View(participant_scores)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
#geom_histogram(binwidth=2) +
#geom_density() +
geom_line(data=MAUI_normdens, aes(y=density), colour='red')
plot(MAUI_participant_hist)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI))
plot(MAUI_participant_hist)
MAUI_participant_hist <- ggplot() +
geom_histogram(data = participant_scores, aes(sum_MAUI), binwidth=2) +
#geom_density() +
geom_line(data=MAUI_normdens, aes(y=density), colour='red') +
facet_grid(sample_size ~ TypeItem)
plot(MAUI_participant_hist)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
geom_histogram(binwidth=2) +
#geom_density() +
geom_line(data=MAUI_normdens, aes(y=density), colour='red')
plot(MAUI_participant_hist)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
geom_histogram(binwidth=2) +
#geom_density() +
geom_line(data=MAUI_normdens, aes(y=density, x=predicted), colour='red') +
facet_grid(sample_size ~ TypeItem)
plot(MAUI_participant_hist)
View(MAUI_normdens)
MAUI_normdens <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by(TypeItem, sample_size) %>%
do(data.frame(predicted = MAUI_grid,  density = dnorm(MAUI_grid, mean(.$sum_MAUI), sd(.$sum_MAUI))))
#' normal curve generation
MAUI_grid <- with(participant_scores, seq(min(sum_MAUI), max(sum_MAUI), length = 100))
View(MAUI_grid)
MAUI_check <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by(TypeItem, sample_size) %>%
summarise(mean = mean(.$sum_MAUI), sd = sd(.$sum_MAUI))
View(MAUI_check)
MAUI_check <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by_at(vars(one_of(TypeItem, sample_size))) %>%
summarise(mean = mean(.$sum_MAUI), sd = sd(.$sum_MAUI))
MAUI_check <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by_at(vars(one_of(c('TypeItem', 'sample_size')))) %>%
summarise(mean = mean(.$sum_MAUI), sd = sd(.$sum_MAUI))
MAUI_check <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by_at(vars(one_of(c('TypeItem', 'sample_size')))) %>%
summarise(mean = mean(sum_MAUI), sd = sd(sum_MAUI))
MAUI_normdens <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by_at(var(one_of('TypeItem', 'sample_size'))) %>%
do(data.frame(predicted = MAUI_grid,  density = dnorm(MAUI_grid, mean(sum_MAUI), sd(sum_MAUI))))
MAUI_normdens <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by_at(var(one_of('TypeItem', 'sample_size'))) %>%
do(data.frame(predicted = MAUI_grid,  density = dnorm(MAUI_grid, mean(.$sum_MAUI), sd(.$sum_MAUI))))
MAUI_normdens <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by_at(vars(one_of('TypeItem', 'sample_size'))) %>%
do(data.frame(predicted = MAUI_grid,  density = dnorm(MAUI_grid, mean(sum_MAUI), sd(sum_MAUI))))
MAUI_normdens <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by_at(vars(one_of('TypeItem', 'sample_size'))) %>%
do(data.frame(predicted = MAUI_grid,  density = dnorm(MAUI_grid, mean(.$sum_MAUI), sd(.$sum_MAUI))))
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
geom_histogram(binwidth=2) +
#geom_density() +
geom_line(data=MAUI_normdens, aes(y=density, x=predicted), colour='red') +
facet_grid(sample_size ~ TypeItem)
plot(MAUI_participant_hist)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
geom_histogram(binwidth=2) +
#geom_density() +
geom_line(data=MAUI_normdens, aes(y=density), colour='red') +
facet_grid(sample_size ~ TypeItem)
MAUI_normdens <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by_at(vars(one_of('TypeItem', 'sample_size'))) %>%
do(data.frame(sum_MAUI = MAUI_grid,  density = dnorm(MAUI_grid, mean(.$sum_MAUI), sd(.$sum_MAUI))))
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
geom_histogram(binwidth=2) +
#geom_density() +
geom_line(data=MAUI_normdens, aes(y=density), colour='red') +
facet_grid(sample_size ~ TypeItem)
plot(MAUI_participant_hist)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
#geom_histogram(binwidth=2) +
#geom_density() +
geom_line(data=MAUI_normdens, aes(y=density), colour='red') +
facet_grid(sample_size ~ TypeItem)
plot(MAUI_participant_hist)
MAUI_participant_hist <- ggplot(data = participant_scores, aes(sum_MAUI)) +
#geom_histogram(binwidth=2) +
geom_density() +
geom_line(data=MAUI_normdens, aes(y=density), colour='red') +
facet_grid(sample_size ~ TypeItem)
plot(MAUI_participant_hist)
install.packages('fitdistplus')
install.packages('fitdist')
install.packages('MASS')
MAUI_weibull <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by_at(vars(one_of('TypeItem', 'sample_size'))) %>%
summarise(fit = fitdist(.$sum_MAUI, 'weibull'))
MAUI_weibull <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by_at(vars(one_of('TypeItem', 'sample_size'))) %>%
summarise(fit = fitdistr(.$sum_MAUI, 'weibull'))
library(MASS)
MAUI_weibull <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by_at(vars(one_of('TypeItem', 'sample_size'))) %>%
summarise(fit = fitdistr(.$sum_MAUI, 'weibull'))
MAUI_weibull <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by_at(vars(one_of('TypeItem', 'sample_size')))
library(tidyverse)
library(MASS)
library(foreach)
library(tidyverse)
library(readxl)
MAUI_weibull <- participant_scores %>%
select(one_of(c('sum_MAUI', 'TypeItem', 'sample_size'))) %>%
group_by_at(vars(one_of('TypeItem', 'sample_size'))) %>%
summarise(fit = fitdistr(.$sum_MAUI, 'weibull'))
